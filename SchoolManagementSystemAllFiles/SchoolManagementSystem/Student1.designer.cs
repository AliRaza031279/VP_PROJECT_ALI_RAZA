#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchoolManagementSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DbSchoolManagementSystem")]
	public partial class StudentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStudentTable(StudentTable instance);
    partial void UpdateStudentTable(StudentTable instance);
    partial void DeleteStudentTable(StudentTable instance);
    #endregion
		
		public StudentDataContext() : 
				base(global::SchoolManagementSystem.Properties.Settings.Default.DbSchoolManagementSystemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StudentTable> StudentTables
		{
			get
			{
				return this.GetTable<StudentTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentTable")]
	public partial class StudentTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private string _FatherId;
		
		private string _DOB;
		
		private string _DOR;
		
		private string _EmailiD;
		
		private string _MobNo;
		
		private string _Gender;
		
		private string _Class;
		
		private string _Course;
		
		private string _Teacher;
		
		private System.Nullable<int> _CourseFee;
		
		private System.Nullable<int> _FeePaid;
		
		private System.Nullable<int> _Balance;
		
		private string _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnFatherIdChanging(string value);
    partial void OnFatherIdChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    partial void OnDORChanging(string value);
    partial void OnDORChanged();
    partial void OnEmailiDChanging(string value);
    partial void OnEmailiDChanged();
    partial void OnMobNoChanging(string value);
    partial void OnMobNoChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnTeacherChanging(string value);
    partial void OnTeacherChanged();
    partial void OnCourseFeeChanging(System.Nullable<int> value);
    partial void OnCourseFeeChanged();
    partial void OnFeePaidChanging(System.Nullable<int> value);
    partial void OnFeePaidChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public StudentTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="VarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherId", DbType="VarChar(50)")]
		public string FatherId
		{
			get
			{
				return this._FatherId;
			}
			set
			{
				if ((this._FatherId != value))
				{
					this.OnFatherIdChanging(value);
					this.SendPropertyChanging();
					this._FatherId = value;
					this.SendPropertyChanged("FatherId");
					this.OnFatherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50)")]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOR", DbType="VarChar(50)")]
		public string DOR
		{
			get
			{
				return this._DOR;
			}
			set
			{
				if ((this._DOR != value))
				{
					this.OnDORChanging(value);
					this.SendPropertyChanging();
					this._DOR = value;
					this.SendPropertyChanged("DOR");
					this.OnDORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailiD", DbType="VarChar(50)")]
		public string EmailiD
		{
			get
			{
				return this._EmailiD;
			}
			set
			{
				if ((this._EmailiD != value))
				{
					this.OnEmailiDChanging(value);
					this.SendPropertyChanging();
					this._EmailiD = value;
					this.SendPropertyChanged("EmailiD");
					this.OnEmailiDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobNo", DbType="VarChar(50)")]
		public string MobNo
		{
			get
			{
				return this._MobNo;
			}
			set
			{
				if ((this._MobNo != value))
				{
					this.OnMobNoChanging(value);
					this.SendPropertyChanging();
					this._MobNo = value;
					this.SendPropertyChanged("MobNo");
					this.OnMobNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="VarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(50)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="VarChar(50)")]
		public string Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					this.OnTeacherChanging(value);
					this.SendPropertyChanging();
					this._Teacher = value;
					this.SendPropertyChanged("Teacher");
					this.OnTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseFee", DbType="Int")]
		public System.Nullable<int> CourseFee
		{
			get
			{
				return this._CourseFee;
			}
			set
			{
				if ((this._CourseFee != value))
				{
					this.OnCourseFeeChanging(value);
					this.SendPropertyChanging();
					this._CourseFee = value;
					this.SendPropertyChanged("CourseFee");
					this.OnCourseFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePaid", DbType="Int")]
		public System.Nullable<int> FeePaid
		{
			get
			{
				return this._FeePaid;
			}
			set
			{
				if ((this._FeePaid != value))
				{
					this.OnFeePaidChanging(value);
					this.SendPropertyChanging();
					this._FeePaid = value;
					this.SendPropertyChanged("FeePaid");
					this.OnFeePaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
